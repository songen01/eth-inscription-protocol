// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.5
// source: inscription/v1/inscription.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAnyByTrxHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxHash string `protobuf:"bytes,1,opt,name=trx_hash,json=trxHash,proto3" json:"trx_hash,omitempty"`
}

func (x *GetAnyByTrxHashReq) Reset() {
	*x = GetAnyByTrxHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inscription_v1_inscription_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnyByTrxHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnyByTrxHashReq) ProtoMessage() {}

func (x *GetAnyByTrxHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_inscription_v1_inscription_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnyByTrxHashReq.ProtoReflect.Descriptor instead.
func (*GetAnyByTrxHashReq) Descriptor() ([]byte, []int) {
	return file_inscription_v1_inscription_proto_rawDescGZIP(), []int{0}
}

func (x *GetAnyByTrxHashReq) GetTrxHash() string {
	if x != nil {
		return x.TrxHash
	}
	return ""
}

type ByAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ByAddress) Reset() {
	*x = ByAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inscription_v1_inscription_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByAddress) ProtoMessage() {}

func (x *ByAddress) ProtoReflect() protoreflect.Message {
	mi := &file_inscription_v1_inscription_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByAddress.ProtoReflect.Descriptor instead.
func (*ByAddress) Descriptor() ([]byte, []int) {
	return file_inscription_v1_inscription_proto_rawDescGZIP(), []int{1}
}

func (x *ByAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type SwiftResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*SwiftResponse `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *SwiftResponses) Reset() {
	*x = SwiftResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inscription_v1_inscription_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwiftResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwiftResponses) ProtoMessage() {}

func (x *SwiftResponses) ProtoReflect() protoreflect.Message {
	mi := &file_inscription_v1_inscription_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwiftResponses.ProtoReflect.Descriptor instead.
func (*SwiftResponses) Descriptor() ([]byte, []int) {
	return file_inscription_v1_inscription_proto_rawDescGZIP(), []int{2}
}

func (x *SwiftResponses) GetGroups() []*SwiftResponse {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StartHeight int64  `protobuf:"varint,2,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	EndHeight   int64  `protobuf:"varint,3,opt,name=end_height,json=endHeight,proto3" json:"end_height,omitempty"`
}

func (x *GetMessageReq) Reset() {
	*x = GetMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inscription_v1_inscription_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageReq) ProtoMessage() {}

func (x *GetMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_inscription_v1_inscription_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageReq.ProtoReflect.Descriptor instead.
func (*GetMessageReq) Descriptor() ([]byte, []int) {
	return file_inscription_v1_inscription_proto_rawDescGZIP(), []int{3}
}

func (x *GetMessageReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetMessageReq) GetStartHeight() int64 {
	if x != nil {
		return x.StartHeight
	}
	return 0
}

func (x *GetMessageReq) GetEndHeight() int64 {
	if x != nil {
		return x.EndHeight
	}
	return 0
}

type GetGroupMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	StartHeight int64  `protobuf:"varint,2,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	EndHeight   int64  `protobuf:"varint,3,opt,name=end_height,json=endHeight,proto3" json:"end_height,omitempty"`
}

func (x *GetGroupMessageReq) Reset() {
	*x = GetGroupMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inscription_v1_inscription_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMessageReq) ProtoMessage() {}

func (x *GetGroupMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_inscription_v1_inscription_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMessageReq.ProtoReflect.Descriptor instead.
func (*GetGroupMessageReq) Descriptor() ([]byte, []int) {
	return file_inscription_v1_inscription_proto_rawDescGZIP(), []int{4}
}

func (x *GetGroupMessageReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetGroupMessageReq) GetStartHeight() int64 {
	if x != nil {
		return x.StartHeight
	}
	return 0
}

func (x *GetGroupMessageReq) GetEndHeight() int64 {
	if x != nil {
		return x.EndHeight
	}
	return 0
}

type GetTweetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StartHeight int64  `protobuf:"varint,2,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	EndHeight   int64  `protobuf:"varint,3,opt,name=end_height,json=endHeight,proto3" json:"end_height,omitempty"`
}

func (x *GetTweetReq) Reset() {
	*x = GetTweetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inscription_v1_inscription_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTweetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTweetReq) ProtoMessage() {}

func (x *GetTweetReq) ProtoReflect() protoreflect.Message {
	mi := &file_inscription_v1_inscription_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTweetReq.ProtoReflect.Descriptor instead.
func (*GetTweetReq) Descriptor() ([]byte, []int) {
	return file_inscription_v1_inscription_proto_rawDescGZIP(), []int{5}
}

func (x *GetTweetReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetTweetReq) GetStartHeight() int64 {
	if x != nil {
		return x.StartHeight
	}
	return 0
}

func (x *GetTweetReq) GetEndHeight() int64 {
	if x != nil {
		return x.EndHeight
	}
	return 0
}

type SwiftResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Title    string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Text     string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Image    []string `protobuf:"bytes,4,rep,name=image,proto3" json:"image,omitempty"`
	Receiver []string `protobuf:"bytes,5,rep,name=receiver,proto3" json:"receiver,omitempty"`
	At       []string `protobuf:"bytes,6,rep,name=at,proto3" json:"at,omitempty"`
	With     string   `protobuf:"bytes,7,opt,name=with,proto3" json:"with,omitempty"`
	Height   int64    `protobuf:"varint,8,opt,name=height,proto3" json:"height,omitempty"`
	TrxHash  string   `protobuf:"bytes,9,opt,name=trx_hash,json=trxHash,proto3" json:"trx_hash,omitempty"`
	TrxTime  string   `protobuf:"bytes,10,opt,name=trx_time,json=trxTime,proto3" json:"trx_time,omitempty"`
	Sender   string   `protobuf:"bytes,11,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *SwiftResponse) Reset() {
	*x = SwiftResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inscription_v1_inscription_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwiftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwiftResponse) ProtoMessage() {}

func (x *SwiftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inscription_v1_inscription_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwiftResponse.ProtoReflect.Descriptor instead.
func (*SwiftResponse) Descriptor() ([]byte, []int) {
	return file_inscription_v1_inscription_proto_rawDescGZIP(), []int{6}
}

func (x *SwiftResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SwiftResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SwiftResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SwiftResponse) GetImage() []string {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *SwiftResponse) GetReceiver() []string {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *SwiftResponse) GetAt() []string {
	if x != nil {
		return x.At
	}
	return nil
}

func (x *SwiftResponse) GetWith() string {
	if x != nil {
		return x.With
	}
	return ""
}

func (x *SwiftResponse) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *SwiftResponse) GetTrxHash() string {
	if x != nil {
		return x.TrxHash
	}
	return ""
}

func (x *SwiftResponse) GetTrxTime() string {
	if x != nil {
		return x.TrxTime
	}
	return ""
}

func (x *SwiftResponse) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

type Tweets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tweet    *SwiftResponse   `protobuf:"bytes,1,opt,name=tweet,proto3" json:"tweet,omitempty"`
	With     *SwiftResponse   `protobuf:"bytes,2,opt,name=with,proto3" json:"with,omitempty"`
	Comments []*SwiftResponse `protobuf:"bytes,3,rep,name=comments,proto3" json:"comments,omitempty"`
	LikeNum  int64            `protobuf:"varint,4,opt,name=like_num,json=likeNum,proto3" json:"like_num,omitempty"`
	LikeBool bool             `protobuf:"varint,5,opt,name=like_bool,json=likeBool,proto3" json:"like_bool,omitempty"`
}

func (x *Tweets) Reset() {
	*x = Tweets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inscription_v1_inscription_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tweets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tweets) ProtoMessage() {}

func (x *Tweets) ProtoReflect() protoreflect.Message {
	mi := &file_inscription_v1_inscription_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tweets.ProtoReflect.Descriptor instead.
func (*Tweets) Descriptor() ([]byte, []int) {
	return file_inscription_v1_inscription_proto_rawDescGZIP(), []int{7}
}

func (x *Tweets) GetTweet() *SwiftResponse {
	if x != nil {
		return x.Tweet
	}
	return nil
}

func (x *Tweets) GetWith() *SwiftResponse {
	if x != nil {
		return x.With
	}
	return nil
}

func (x *Tweets) GetComments() []*SwiftResponse {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *Tweets) GetLikeNum() int64 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *Tweets) GetLikeBool() bool {
	if x != nil {
		return x.LikeBool
	}
	return false
}

type TweetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tweets []*Tweets `protobuf:"bytes,1,rep,name=tweets,proto3" json:"tweets,omitempty"`
}

func (x *TweetResponse) Reset() {
	*x = TweetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inscription_v1_inscription_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TweetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TweetResponse) ProtoMessage() {}

func (x *TweetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inscription_v1_inscription_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TweetResponse.ProtoReflect.Descriptor instead.
func (*TweetResponse) Descriptor() ([]byte, []int) {
	return file_inscription_v1_inscription_proto_rawDescGZIP(), []int{8}
}

func (x *TweetResponse) GetTweets() []*Tweets {
	if x != nil {
		return x.Tweets
	}
	return nil
}

var File_inscription_v1_inscription_proto protoreflect.FileDescriptor

var file_inscription_v1_inscription_proto_rawDesc = []byte{
	0x0a, 0x20, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x79, 0x42, 0x79,
	0x54, 0x72, 0x78, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x25, 0x0a, 0x09, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4b, 0x0a, 0x0e,
	0x53, 0x77, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x39,
	0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x6b, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x64,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x6c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0x69, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x89, 0x02, 0x0a, 0x0d, 0x53, 0x77, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x61,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x77, 0x69, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x72, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x78, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x78, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0xef, 0x01, 0x0a, 0x06,
	0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x74, 0x77, 0x65, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x66, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x74, 0x77, 0x65, 0x65, 0x74, 0x12,
	0x35, 0x0a, 0x04, 0x77, 0x69, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x77, 0x69, 0x74, 0x68, 0x12, 0x3d, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77,
	0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x43, 0x0a,
	0x0d, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x06, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x52, 0x06, 0x74, 0x77, 0x65, 0x65,
	0x74, 0x73, 0x32, 0xe4, 0x07, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x64, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x61, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x66, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12,
	0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x69, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x77, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x79, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x62, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x12, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x74, 0x77, 0x65, 0x65, 0x74, 0x12, 0x6f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x54, 0x77, 0x65, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x77,
	0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x74, 0x77, 0x65, 0x65, 0x74, 0x12, 0x75, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x77,
	0x65, 0x65, 0x74, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x12, 0x63, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x77, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x13, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x12, 0x75, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x79, 0x42, 0x79, 0x54, 0x72,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e,
	0x79, 0x42, 0x79, 0x54, 0x72, 0x78, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x7b,
	0x74, 0x72, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x7d, 0x42, 0x1f, 0x5a, 0x1d, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_inscription_v1_inscription_proto_rawDescOnce sync.Once
	file_inscription_v1_inscription_proto_rawDescData = file_inscription_v1_inscription_proto_rawDesc
)

func file_inscription_v1_inscription_proto_rawDescGZIP() []byte {
	file_inscription_v1_inscription_proto_rawDescOnce.Do(func() {
		file_inscription_v1_inscription_proto_rawDescData = protoimpl.X.CompressGZIP(file_inscription_v1_inscription_proto_rawDescData)
	})
	return file_inscription_v1_inscription_proto_rawDescData
}

var file_inscription_v1_inscription_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_inscription_v1_inscription_proto_goTypes = []interface{}{
	(*GetAnyByTrxHashReq)(nil), // 0: api.inscription.v1.GetAnyByTrxHashReq
	(*ByAddress)(nil),          // 1: api.inscription.v1.ByAddress
	(*SwiftResponses)(nil),     // 2: api.inscription.v1.SwiftResponses
	(*GetMessageReq)(nil),      // 3: api.inscription.v1.GetMessageReq
	(*GetGroupMessageReq)(nil), // 4: api.inscription.v1.GetGroupMessageReq
	(*GetTweetReq)(nil),        // 5: api.inscription.v1.GetTweetReq
	(*SwiftResponse)(nil),      // 6: api.inscription.v1.SwiftResponse
	(*Tweets)(nil),             // 7: api.inscription.v1.Tweets
	(*TweetResponse)(nil),      // 8: api.inscription.v1.TweetResponse
}
var file_inscription_v1_inscription_proto_depIdxs = []int32{
	6,  // 0: api.inscription.v1.SwiftResponses.groups:type_name -> api.inscription.v1.SwiftResponse
	6,  // 1: api.inscription.v1.Tweets.tweet:type_name -> api.inscription.v1.SwiftResponse
	6,  // 2: api.inscription.v1.Tweets.with:type_name -> api.inscription.v1.SwiftResponse
	6,  // 3: api.inscription.v1.Tweets.comments:type_name -> api.inscription.v1.SwiftResponse
	7,  // 4: api.inscription.v1.TweetResponse.tweets:type_name -> api.inscription.v1.Tweets
	1,  // 5: api.inscription.v1.Inscription.GetProfile:input_type -> api.inscription.v1.ByAddress
	1,  // 6: api.inscription.v1.Inscription.GetGroup:input_type -> api.inscription.v1.ByAddress
	3,  // 7: api.inscription.v1.Inscription.GetMessage:input_type -> api.inscription.v1.GetMessageReq
	4,  // 8: api.inscription.v1.Inscription.GetGroupMessage:input_type -> api.inscription.v1.GetGroupMessageReq
	5,  // 9: api.inscription.v1.Inscription.GetTweet:input_type -> api.inscription.v1.GetTweetReq
	5,  // 10: api.inscription.v1.Inscription.GetFollowTweet:input_type -> api.inscription.v1.GetTweetReq
	5,  // 11: api.inscription.v1.Inscription.GetTweetByAddress:input_type -> api.inscription.v1.GetTweetReq
	1,  // 12: api.inscription.v1.Inscription.GetFollow:input_type -> api.inscription.v1.ByAddress
	0,  // 13: api.inscription.v1.Inscription.GetAnyByTrxHash:input_type -> api.inscription.v1.GetAnyByTrxHashReq
	6,  // 14: api.inscription.v1.Inscription.GetProfile:output_type -> api.inscription.v1.SwiftResponse
	2,  // 15: api.inscription.v1.Inscription.GetGroup:output_type -> api.inscription.v1.SwiftResponses
	2,  // 16: api.inscription.v1.Inscription.GetMessage:output_type -> api.inscription.v1.SwiftResponses
	2,  // 17: api.inscription.v1.Inscription.GetGroupMessage:output_type -> api.inscription.v1.SwiftResponses
	8,  // 18: api.inscription.v1.Inscription.GetTweet:output_type -> api.inscription.v1.TweetResponse
	8,  // 19: api.inscription.v1.Inscription.GetFollowTweet:output_type -> api.inscription.v1.TweetResponse
	8,  // 20: api.inscription.v1.Inscription.GetTweetByAddress:output_type -> api.inscription.v1.TweetResponse
	2,  // 21: api.inscription.v1.Inscription.GetFollow:output_type -> api.inscription.v1.SwiftResponses
	6,  // 22: api.inscription.v1.Inscription.GetAnyByTrxHash:output_type -> api.inscription.v1.SwiftResponse
	14, // [14:23] is the sub-list for method output_type
	5,  // [5:14] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_inscription_v1_inscription_proto_init() }
func file_inscription_v1_inscription_proto_init() {
	if File_inscription_v1_inscription_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_inscription_v1_inscription_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnyByTrxHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inscription_v1_inscription_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inscription_v1_inscription_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwiftResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inscription_v1_inscription_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inscription_v1_inscription_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inscription_v1_inscription_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTweetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inscription_v1_inscription_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwiftResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inscription_v1_inscription_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tweets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inscription_v1_inscription_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TweetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inscription_v1_inscription_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inscription_v1_inscription_proto_goTypes,
		DependencyIndexes: file_inscription_v1_inscription_proto_depIdxs,
		MessageInfos:      file_inscription_v1_inscription_proto_msgTypes,
	}.Build()
	File_inscription_v1_inscription_proto = out.File
	file_inscription_v1_inscription_proto_rawDesc = nil
	file_inscription_v1_inscription_proto_goTypes = nil
	file_inscription_v1_inscription_proto_depIdxs = nil
}
