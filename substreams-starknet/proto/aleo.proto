syntax = "proto3";

package sf.aleo.block.v1;

option go_package = "github.com/NexusDAO/firehose-aleo/types/pb/sf/aleo/type/v1;pbaleo";

message Block {
    string block_hash = 1;
    string previous_hash = 2;
    Header header = 3;
    repeated Transactions transactions = 4;
    string signature = 5;
    Coinbase coinbase = 6;
    repeated Ratification ratifications = 7;
}

message Ratification{
    string type = 1;
    string address = 2;
    string amount = 3;
}

message Coinbase{
    repeated PartialSolution partial_solutions = 1;
    ProofW proof_w = 2 [json_name = "proof.w"];
    string proof_random_v = 3 [json_name = "proof.random_v"];
}

message PartialSolution{
    string address = 1;
    string nonce = 2;
    string commitment = 3;
}

message ProofW{
    string x = 1;
    string y = 2;
    bool infinity = 3;
}

message Header{
    string previous_state_root = 1;
    string transactions_root = 2;
    string finalize_root = 3;
    string coinbase_accumulator_point = 4;
    Metadata metadata = 5;
    string ratifications_root = 6;
}

message Metadata{
    uint32 network = 1;
    uint64 round = 2;
    uint32 height = 3;
    uint64 total_supply_in_microcredits = 4;
    string cumulative_weight = 5;
    uint64 coinbase_target = 6;
    uint64 proof_target = 7;
    uint64 last_coinbase_target = 8;
    int64 last_coinbase_timestamp = 9;
    int64 timestamp = 10;
    string cumulative_proof_target = 11;
}

message Transactions{
    string status = 1;
    string type = 2;
    uint64 index = 3;
    Transaction transaction = 4;
    repeated Finalize finalize = 5;
    Rejected rejected = 6;
}

message Rejected{
    string type = 1;
    ProgramOwner program_owner = 2;
    Deployment deployment = 3;
    Execution execution = 4;
}

message ProgramOwner{
    string address = 1;
    string signature = 2;
}

message Transaction{
    string type = 1;
    string id = 2;
    Execution execution = 3;
    Fee fee = 4;
    Owner owner = 5;
    Deployment deployment = 6;
}

message Deployment{
    uint64 edition = 1;
    string program = 2;
    repeated VerifyingKey verifying_keys = 3;
}

message VerifyingKey{
    repeated Function values = 1;
}

message Function{
    string name = 1;
    repeated string keys = 2;
}

message Owner{
    string address = 1;
    string signature = 2;
}

message Fee{
    Transition transition = 1;
    string global_state_root = 2;
    string inclusion = 3;
}

message Execution{
    repeated Transition transition = 1;
    string global_state_root = 2;
    string proof = 3;
}

message Transition{
    string  id = 1;
    string program = 2;
    string function = 3;
    repeated Input inputs = 4;
    repeated Output outputs = 5;
    string proof = 6;
    string tpk = 7;
    string tcm = 8;
    repeated string finalize = 9;
}

message Input{
    string type = 1;
    string id = 2;
    string value = 3;
    string tag = 4;
}

message Output{
    string type = 1;
    string id = 2;
    string checksum = 3;
    string value = 4;
}

message Finalize{
    string type = 1;
    string mapping_id = 2;
    uint64 index = 3;
    string key_id = 4;
    string value_id = 5;
}

message Records {
    repeated Record records = 1;
}

message Record {
    string program = 1;
    string function = 2;
    repeated Input inputs = 3;
    repeated Output outputs = 4;
    repeated string finalize = 5;
    string block_hash = 6;
    string previous_hash = 7;
    string transaction_id = 8;
    string transition_id = 9;
    uint32 network = 10;
    uint32 height = 11;
    int64 timestamp = 12;
}