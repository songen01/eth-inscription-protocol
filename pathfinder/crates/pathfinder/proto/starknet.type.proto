syntax = "proto3";

package zklend.starknet.type.v1;

// This file only contains the bare minimum types for the POC. It's far from a complete
// representation of a StarkNet network's history as required by the Firehose protocol. As a result,
// any future changes to this schema would require a full re-sync of the StarkNet node.

message BlockData {
    string block_hash = 1;
    uint64 block_number = 2;
    string gas_price = 3;
    string parent_block_hash = 4;
    string sequencer_address = 5;
    string state_commitment = 6;
    string status = 7;
    uint64 timestamp = 8;
    message TransactionReceipt {
        string actual_fee = 1;
        message Event {
            repeated string data = 1;
            string from_address = 2;
            repeated string keys = 3;
        }
        repeated Event events = 2;
        message ExecutionResources {
            message BuiltinInstanceCounter {
                uint64 output_builtin = 1;
                uint64 pedersen_builtin = 2;
                uint64 range_check_builtin = 3;
                uint64 ecdsa_builtin = 4;
                uint64 bitwise_builtin = 5;
                uint64 ec_op_builtin = 6;
                uint64 keccak_builtin = 7;
                uint64 poseidon_builtin = 8;
                uint64 segment_arena_builtin = 9;
            }
            BuiltinInstanceCounter builtin_instance_counter = 1;
            uint64 n_steps = 2;
            uint64 n_memory_holes = 3;
        }
        ExecutionResources execution_resources = 3;
        message L1ToL2Message {
            string from_address = 1;
            repeated string payload = 2;
            string selector = 3;
            string to_address = 4;
            string nonce = 5;
        }
        L1ToL2Message l1_to_l2_consumed_message = 4;
        message L2ToL1Message {
            string from_address = 1;
            repeated string payload = 2;
            string to_address = 3;
        }
        repeated L2ToL1Message l2_to_l1_messages = 5;
        string transaction_hash = 6;
        uint64 transaction_index = 7;
        string execution_status = 8;
        string revert_error = 9;
    }
    repeated TransactionReceipt transaction_receipts = 9;
    repeated Transaction transactions = 10;
    string starknet_version = 11;
}

enum TransactionType {
    DECLARE = 0;
    DEPLOY = 1;
    DEPLOY_ACCOUNT = 2;
    INVOKE_FUNCTION = 3;
    L1_HANDLER = 4;
}

message Transaction {
    oneof transaction {
        InvokeTransaction invoke_transaction = 1;
        DeclareTransaction declare_transaction = 2;
        DeployTransaction deploy_transaction = 3;
        DeployAccountTransaction deploy_account_transaction = 4;
        L1HandlerTransaction l1_handler_transaction = 5;
    }
}

message DeclareTransaction {
    TransactionType type = 1;
    string version = 2;
    string class_hash = 3;
    string max_fee = 4;
    string nonce = 5;
    string sender_address = 6;
    repeated string signature = 7;
    string transaction_hash = 8;
    string compiled_class_hash = 9;
}

message DeployTransaction {
    TransactionType type = 1;
    string version = 2;
    string contract_address = 3;
    string contract_address_salt = 4;
    string class_hash = 5;
    repeated string constructor_calldata = 6;
    string transaction_hash = 7;
}

message DeployAccountTransaction {
    TransactionType type = 1;
    string version = 2;
    string contract_address = 3;
    string contract_address_salt = 4;
    string class_hash = 5;
    repeated string constructor_calldata = 6;
    string transaction_hash = 7;
    string max_fee = 8;
    repeated string signature = 9;
    string nonce = 10;
}

message InvokeTransaction {
    TransactionType type = 1;
    string version = 2;
    repeated string calldata = 3;
    string sender_address = 4;
    string entry_point_selector = 5;
    string entry_point_type = 6;
    string max_fee = 7;
    repeated string signature = 8;
    string nonce = 9;
    string transaction_hash = 10;
}

message L1HandlerTransaction {
    TransactionType type = 1;
    string version = 2;
    string contract_address = 3;
    string entry_point_selector = 4;
    string nonce = 5;
    repeated string calldata = 6;
    string transaction_hash = 7;
}